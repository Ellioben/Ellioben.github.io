<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>k8s - Tag - Yongbo&#39;s Blog</title>
        <link>https://Ellioben.github.io/tags/k8s/</link>
        <description>k8s - Tag - Yongbo&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>xieyongbo@tom.com (XieYongbo/Ellioben)</managingEditor>
            <webMaster>xieyongbo@tom.com (XieYongbo/Ellioben)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 22 Sep 2022 23:58:22 &#43;0800</lastBuildDate><atom:link href="https://Ellioben.github.io/tags/k8s/" rel="self" type="application/rss+xml" /><item>
    <title>K8S</title>
    <link>https://Ellioben.github.io/k8s/</link>
    <pubDate>Thu, 22 Sep 2022 23:58:22 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://Ellioben.github.io/k8s/</guid>
    <description><![CDATA[待更新&hellip;&hellip;
全名Kubernetes（虚拟容器批量管理工具之一） 学习文档 https://kubernetes.io/zh-cn/docs/tasks/tools/
Kubernetes 作为一个容器集群管理系统，用于管理云平台中多个主机上的容器应用，Kubernetes 的目标是让部署容器化的应用变得简单且高效，所以 Kubernetes 提供了应用部署，规划，更新，维护的一整套完整的机制。
比起k8s是构建容器编排工具来说，在我看来k8s更像是一个虚拟服务容器级别的生态圈。
k8s服务架构
Master node k8s集群控制节点，对集群迸行调度管理，接受集群外用户去集群操作请求; Master node由 API Server、 Scheduler、 Cluster state store（ETCD数据库）和 Controller Manger Server所组成; Worker node 集群工作节点，运行用户业务应用容器; Worker Node包含 kubelet、 kube proxy和 Container Runtime; 准备 k8s是基于docker的。要先安装docker
Kubeadm 有多台vm推荐kubeadm安装k8s环境
minikube 没有vm推荐使用minikube
安装minikube（在docker跑了个ubantu跑了个minikube的节点）
1 2 3 brew install minikube #启动 minikube start https://k8s.easydoc.net/docs/dRiQjyTY/28366845/6GiNOzyZ/9EX8Cp45
主节点需要组件 docker（也可以是其他容器运行时） kubectl 集群命令行交互工具 工具 自己本地测试需要安装的工具
minikube kubectl k9s好用的dashboard（可选） 1 2 3 4 5 brew install kubectl or brew install kubernetes-cli #测试一下，确保你安装的是最新的版本： kubectl version --client 常用的指令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #创建namespase kubectl create ns test # apply 创建一个k8s组建 kubectl apply -n test -f xxxx.]]></description>
</item>
</channel>
</rss>
